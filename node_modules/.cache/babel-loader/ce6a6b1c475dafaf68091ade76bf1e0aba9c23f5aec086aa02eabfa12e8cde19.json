{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement\\\\Tasks\\\\Bajaj\\\\frontend\\\\src\\\\DataInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataInput = () => {\n  _s();\n  const [inputData, setInputData] = useState('');\n  const [responseData, setResponseData] = useState(null);\n  const [error, setError] = useState('');\n  const [selectedOptions, setSelectedOptions] = useState({\n    email: true,\n    roll_number: true,\n    numbers: true,\n    alphabets: true,\n    highest_lowercase_alphabet: true\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Reset any previous errors\n    try {\n      const jsonData = JSON.parse(inputData); // Parse input JSON\n      const response = await axios.post('http://localhost:3000/bfhl', jsonData);\n      setResponseData(response.data);\n    } catch (err) {\n      console.error('Submission error:', err);\n      setError('An error occurred while submitting data.');\n      setResponseData(null);\n    }\n  };\n  const renderResponse = () => {\n    if (!responseData) return null;\n    const output = {};\n    for (const key in selectedOptions) {\n      if (selectedOptions[key]) {\n        output[key] = responseData[key];\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(output, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  };\n  const handleOptionChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setSelectedOptions(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        value: inputData,\n        onChange: e => setInputData(e.target.value),\n        placeholder: \"Enter JSON here (e.g., {\\\"data\\\": [\\\"A\\\", \\\"C\\\", \\\"Z\\\", \\\"c\\\", \\\"i\\\"], \\\"file_b64\\\": \\\"BASE_64_STRING\\\"})\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Response Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), Object.keys(selectedOptions).map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: option,\n        checked: selectedOptions[option],\n        onChange: handleOptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), option.replace(/_/g, ' ').replace(/(^\\w|\\s\\w)/g, c => c.toUpperCase()), \" \"]\n    }, option, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), renderResponse()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(DataInput, \"stOOm+2mMyjvIzILGZfOTsHVmIo=\");\n_c = DataInput;\nexport default DataInput;\nvar _c;\n$RefreshReg$(_c, \"DataInput\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DataInput","_s","inputData","setInputData","responseData","setResponseData","error","setError","selectedOptions","setSelectedOptions","email","roll_number","numbers","alphabets","highest_lowercase_alphabet","handleSubmit","e","preventDefault","jsonData","JSON","parse","response","post","data","err","console","renderResponse","output","key","children","stringify","fileName","_jsxFileName","lineNumber","columnNumber","handleOptionChange","name","checked","target","prev","onSubmit","rows","value","onChange","placeholder","required","type","style","color","Object","keys","map","option","replace","c","toUpperCase","_c","$RefreshReg$"],"sources":["E:/Placement/Tasks/Bajaj/frontend/src/DataInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DataInput = () => {\r\n    const [inputData, setInputData] = useState('');\r\n    const [responseData, setResponseData] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [selectedOptions, setSelectedOptions] = useState({\r\n        email: true,\r\n        roll_number: true,\r\n        numbers: true,\r\n        alphabets: true,\r\n        highest_lowercase_alphabet: true,\r\n    });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Reset any previous errors\r\n        try {\r\n            const jsonData = JSON.parse(inputData); // Parse input JSON\r\n            const response = await axios.post('http://localhost:3000/bfhl', jsonData);\r\n            setResponseData(response.data);\r\n        } catch (err) {\r\n            console.error('Submission error:', err);\r\n            setError('An error occurred while submitting data.');\r\n            setResponseData(null);\r\n        }\r\n    };\r\n\r\n    const renderResponse = () => {\r\n        if (!responseData) return null;\r\n\r\n        const output = {};\r\n        for (const key in selectedOptions) {\r\n            if (selectedOptions[key]) {\r\n                output[key] = responseData[key];\r\n            }\r\n        }\r\n\r\n        return <pre>{JSON.stringify(output, null, 2)}</pre>;\r\n    };\r\n\r\n    const handleOptionChange = (e) => {\r\n        const { name, checked } = e.target;\r\n        setSelectedOptions((prev) => ({ ...prev, [name]: checked }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Data Input</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea\r\n                    rows=\"5\"\r\n                    value={inputData}\r\n                    onChange={(e) => setInputData(e.target.value)}\r\n                    placeholder='Enter JSON here (e.g., {\"data\": [\"A\", \"C\", \"Z\", \"c\", \"i\"], \"file_b64\": \"BASE_64_STRING\"})'\r\n                    required\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <h2>Select Response Options</h2>\r\n            {Object.keys(selectedOptions).map(option => (\r\n                <label key={option}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name={option}\r\n                        checked={selectedOptions[option]}\r\n                        onChange={handleOptionChange}\r\n                    />\r\n                    {option.replace(/_/g, ' ').replace(/(^\\w|\\s\\w)/g, c => c.toUpperCase())} {/* Format for display */}\r\n                </label>\r\n            ))}\r\n            <h2>Response</h2>\r\n            {renderResponse()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}