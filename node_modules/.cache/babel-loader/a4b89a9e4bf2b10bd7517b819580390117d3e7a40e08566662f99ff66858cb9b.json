{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement\\\\Tasks\\\\Bajaj\\\\frontend\\\\src\\\\DataInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataInput = () => {\n  _s();\n  const [inputData, setInputData] = useState('');\n  const [responseData, setResponseData] = useState(null);\n  const [error, setError] = useState('');\n  const [selectedOptions, setSelectedOptions] = useState({\n    alphabets: false,\n    numbers: false,\n    highestLowercase: false\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Reset any previous errors\n    console.log('Submitting data:', inputData); // Log the input data\n\n    // Check for empty input\n    if (!inputData.trim()) {\n      setError('Input cannot be empty');\n      return;\n    }\n    try {\n      const jsonData = JSON.parse(inputData);\n      const response = await axios.post('http://localhost:3000/bfhl', jsonData);\n      console.log('Response data:', response.data); // Log the response\n      setResponseData(response.data);\n    } catch (err) {\n      console.error('Submission error:', err); // Log the error\n      setError('An error occurred while submitting data.');\n      setResponseData(null);\n    }\n  };\n  const handleOptionChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setSelectedOptions(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n  };\n  const renderResponse = () => {\n    if (!responseData) return null;\n    const output = {};\n    if (selectedOptions.alphabets) output.alphabets = responseData.alphabets;\n    if (selectedOptions.numbers) output.numbers = responseData.numbers;\n    if (selectedOptions.highestLowercase) output.highestLowercase = responseData.highest_lowercase_alphabet;\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(output, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        value: inputData,\n        onChange: e => setInputData(e.target.value),\n        placeholder: \"Enter JSON here (e.g., {\\\"data\\\": [\\\"A\\\", \\\"C\\\", \\\"Z\\\", \\\"c\\\", \\\"i\\\"]})\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"alphabets\",\n          checked: selectedOptions.alphabets,\n          onChange: handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \"Alphabets\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"numbers\",\n          checked: selectedOptions.numbers,\n          onChange: handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), \"Numbers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"highestLowercase\",\n          checked: selectedOptions.highestLowercase,\n          onChange: handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), \"Highest Lowercase Alphabet\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), renderResponse()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(DataInput, \"X4yoR+iDwfUpSHjV557WuaLL/V8=\");\n_c = DataInput;\nexport default DataInput;\nvar _c;\n$RefreshReg$(_c, \"DataInput\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DataInput","_s","inputData","setInputData","responseData","setResponseData","error","setError","selectedOptions","setSelectedOptions","alphabets","numbers","highestLowercase","handleSubmit","e","preventDefault","console","log","trim","jsonData","JSON","parse","response","post","data","err","handleOptionChange","name","checked","target","prev","renderResponse","output","highest_lowercase_alphabet","children","stringify","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","value","onChange","placeholder","required","type","style","color","_c","$RefreshReg$"],"sources":["E:/Placement/Tasks/Bajaj/frontend/src/DataInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DataInput = () => {\r\n    const [inputData, setInputData] = useState('');\r\n    const [responseData, setResponseData] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [selectedOptions, setSelectedOptions] = useState({\r\n        alphabets: false,\r\n        numbers: false,\r\n        highestLowercase: false,\r\n    });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    setError(''); // Reset any previous errors\r\n    console.log('Submitting data:', inputData); // Log the input data\r\n\r\n        // Check for empty input\r\n        if (!inputData.trim()) {\r\n            setError('Input cannot be empty');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const jsonData = JSON.parse(inputData);\r\n            const response = await axios.post('http://localhost:3000/bfhl', jsonData);\r\n            console.log('Response data:', response.data); // Log the response\r\n            setResponseData(response.data);\r\n        } catch (err) {\r\n            console.error('Submission error:', err); // Log the error\r\n            setError('An error occurred while submitting data.');\r\n            setResponseData(null);\r\n        }\r\n    };\r\n\r\n    const handleOptionChange = (e) => {\r\n        const { name, checked } = e.target;\r\n        setSelectedOptions((prev) => ({ ...prev, [name]: checked }));\r\n    };\r\n\r\n    const renderResponse = () => {\r\n        if (!responseData) return null;\r\n\r\n        const output = {};\r\n        if (selectedOptions.alphabets) output.alphabets = responseData.alphabets;\r\n        if (selectedOptions.numbers) output.numbers = responseData.numbers;\r\n        if (selectedOptions.highestLowercase) output.highestLowercase = responseData.highest_lowercase_alphabet;\r\n\r\n        return <pre>{JSON.stringify(output, null, 2)}</pre>;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Data Input</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea\r\n                    rows=\"5\"\r\n                    value={inputData}\r\n                    onChange={(e) => setInputData(e.target.value)}\r\n                    placeholder='Enter JSON here (e.g., {\"data\": [\"A\", \"C\", \"Z\", \"c\", \"i\"]})'\r\n                    required\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <div>\r\n                <h2>Select Options</h2>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"alphabets\"\r\n                        checked={selectedOptions.alphabets}\r\n                        onChange={handleOptionChange}\r\n                    />\r\n                    Alphabets\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"numbers\"\r\n                        checked={selectedOptions.numbers}\r\n                        onChange={handleOptionChange}\r\n                    />\r\n                    Numbers\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"highestLowercase\"\r\n                        checked={selectedOptions.highestLowercase}\r\n                        onChange={handleOptionChange}\r\n                    />\r\n                    Highest Lowercase Alphabet\r\n                </label>\r\n            </div>\r\n            <h2>Response</h2>\r\n            {renderResponse()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}