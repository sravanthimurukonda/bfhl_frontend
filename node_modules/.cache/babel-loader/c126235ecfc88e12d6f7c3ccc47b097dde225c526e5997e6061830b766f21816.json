{"ast":null,"code":"var _jsxFileName = \"E:\\\\Placement\\\\Tasks\\\\Bajaj\\\\frontend\\\\src\\\\DataInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputData, setInputData] = useState('');\n  const [responseData, setResponseData] = useState(null);\n  const [error, setError] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError(''); // Reset error before each submission\n\n    // Check for empty input\n    if (!inputData.trim()) {\n      setError('Input cannot be empty');\n      return;\n    }\n    try {\n      const jsonData = JSON.parse(inputData); // Parse the JSON input\n      const response = await axios.post('http://localhost:3000/bfhl', jsonData); // Adjust port\n      setResponseData(response.data);\n    } catch (err) {\n      if (err.response) {\n        // Handle server-side error\n        setError(`Error: ${err.response.data.message || 'Invalid response from server'}`);\n      } else if (err.request) {\n        // Handle network error\n        setError('Network error, please try again later.');\n      } else {\n        // Handle JSON parsing error\n        setError('Invalid JSON input');\n      }\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputData,\n        onChange: e => setInputData(e.target.value),\n        placeholder: \"Enter JSON data\",\n        rows: \"5\",\n        cols: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), responseData && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(responseData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nCbpvg2kEeb+CpTNYWhyBNyhKQk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","inputData","setInputData","responseData","setResponseData","error","setError","handleSubmit","event","preventDefault","trim","jsonData","JSON","parse","response","post","data","err","message","request","console","children","onSubmit","value","onChange","e","target","placeholder","rows","cols","fileName","_jsxFileName","lineNumber","columnNumber","type","style","color","stringify","_c","$RefreshReg$"],"sources":["E:/Placement/Tasks/Bajaj/frontend/src/DataInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst App = () => {\r\n  const [inputData, setInputData] = useState('');\r\n  const [responseData, setResponseData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setError(''); // Reset error before each submission\r\n\r\n    // Check for empty input\r\n    if (!inputData.trim()) {\r\n      setError('Input cannot be empty');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const jsonData = JSON.parse(inputData); // Parse the JSON input\r\n      const response = await axios.post('http://localhost:3000/bfhl', jsonData); // Adjust port\r\n      setResponseData(response.data);\r\n    } catch (err) {\r\n      if (err.response) {\r\n        // Handle server-side error\r\n        setError(`Error: ${err.response.data.message || 'Invalid response from server'}`);\r\n      } else if (err.request) {\r\n        // Handle network error\r\n        setError('Network error, please try again later.');\r\n      } else {\r\n        // Handle JSON parsing error\r\n        setError('Invalid JSON input');\r\n      }\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={inputData}\r\n          onChange={(e) => setInputData(e.target.value)}\r\n          placeholder=\"Enter JSON data\"\r\n          rows=\"5\"\r\n          cols=\"40\"\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {responseData && <pre>{JSON.stringify(responseData, null, 2)}</pre>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}